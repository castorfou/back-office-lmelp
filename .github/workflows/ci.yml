name: 🔄 Continuous Integration

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"

jobs:
  tests:
    name: Test on Python ${{ matrix.python-version }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.11", "3.12"]

    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🐍 Install uv
      uses: astral-sh/setup-uv@v4
      with:
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"

    - name: 🐍 Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}

    - name: 📦 Install dependencies
      run: uv sync --extra dev

    - name: 🔍 Lint with ruff
      run: uv run ruff check . --output-format=github

    - name: 🧪 Run tests
      run: |
        if [ -f tests/test_*.py ] || [ -d tests/ ]; then
          uv run pytest tests/ -v --cov=src --cov-report=term-missing --cov-report=xml
        else
          echo "No tests found. Creating placeholder test structure..."
          mkdir -p tests
          echo "# TODO: Add tests for back-office lmelp" > tests/test_placeholder.py
          echo "def test_placeholder():" >> tests/test_placeholder.py
          echo "    assert True  # Replace with actual tests" >> tests/test_placeholder.py
          uv run pytest tests/ -v
        fi

    - name: 🔧 Type check with mypy
      run: |
        if [ -d src/ ]; then
          uv run mypy src/ || echo "⚠️ MyPy found issues (expected for new projects)"
        else
          echo "No src/ directory found"
        fi

    - name: 📊 Upload coverage to Codecov
      if: matrix.python-version == '3.11'
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        files: ./coverage.xml
        fail_ci_if_error: false

  pre-commit:
    name: 🪝 Pre-commit hooks
    runs-on: ubuntu-latest
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🐍 Install uv
      uses: astral-sh/setup-uv@v4

    - name: 🐍 Set up Python
      run: uv python install 3.11

    - name: 📦 Install dependencies
      run: uv sync --extra dev

    - name: 🪝 Run pre-commit hooks
      run: |
        uv run pre-commit run --all-files --show-diff-on-failure || echo "⚠️ Pre-commit hooks found issues"

  build:
    name: 🏗️ Build package
    runs-on: ubuntu-latest
    needs: [tests, pre-commit]
    steps:
    - name: 📥 Checkout repository
      uses: actions/checkout@v4

    - name: 🐍 Install uv
      uses: astral-sh/setup-uv@v4

    - name: 🐍 Set up Python
      run: uv python install 3.11

    - name: 📦 Install build dependencies
      run: uv sync

    - name: 🏗️ Build package
      run: uv build

    - name: 📤 Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

    - name: ✅ Verify package
      run: |
        echo "📦 Built packages:"
        ls -la dist/
        
        echo "📋 Package metadata:"
        uv run python -m pip show {{ cookiecutter.project_slug.replace('-', '_') }} || echo "Package not installed yet"